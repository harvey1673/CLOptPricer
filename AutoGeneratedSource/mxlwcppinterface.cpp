//// 
//// Autogenerated by xlw 
//// Do not edit this file, it will be overwritten 
//// by InterfaceGenerator 
////

#include "xlw/MyContainers.h"
#include <xlw/CellMatrix.h>
#include <stdexcept>
#include "cppinterface.h"
#include <xlw/xlwManaged.h>
using namespace System;
using namespace Runtime::InteropServices;





MyArray mxlw_CLFitDelta5VolParams
		(
		double dtoday,
		double dexp,
		double fwd,
		MyArray strikeList,
		MyArray volList
		)
		{
		MANAGED_EXECL_BEGIN
			return CLFitDelta5VolParams(dtoday,dexp,fwd,strikeList,volList );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLSmileVolbyStrike
		(
		double dtoday,
		double dexp,
		double fwd,
		double atm,
		double v90,
		double v75,
		double v25,
		double v10,
		double K
		)
		{
		MANAGED_EXECL_BEGIN
			return CLSmileVolbyStrike(dtoday,dexp,fwd,atm,v90,v75,v25,v10,K );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLSmileVolbyDelta
		(
		double dtoday,
		double dexp,
		double fwd,
		double atm,
		double v90,
		double v75,
		double v25,
		double v10,
		double delta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLSmileVolbyDelta(dtoday,dexp,fwd,atm,v90,v75,v25,v10,delta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLSmileEuroOptPricer
		(
		double dtoday,
		double dexp,
		double fwd,
		double strike,
		double atm,
		double v90,
		double v75,
		double v25,
		double v10,
		double doptexp,
		double ir,
		std::string otype,
		std::string outflag,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLSmileEuroOptPricer(dtoday,dexp,fwd,strike,atm,v90,v75,v25,v10,doptexp,ir,otype,outflag,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLEuroOptStripPricer
		(
		double dtoday,
		double dstart,
		double dend,
		double fwd,
		double strike,
		double atm,
		double v90,
		double v75,
		double v25,
		double v10,
		double doptexp,
		double ir,
		std::string otype,
		std::string outflag,
		MyArray hols,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLEuroOptStripPricer(dtoday,dstart,dend,fwd,strike,atm,v90,v75,v25,v10,doptexp,ir,otype,outflag,hols,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLSmileBinOptPricer
		(
		double dtoday,
		double dexp,
		double fwd,
		double strike,
		double atm,
		double v90,
		double v75,
		double v25,
		double v10,
		double doptexp,
		double ir,
		std::string otype,
		std::string outflag,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLSmileBinOptPricer(dtoday,dexp,fwd,strike,atm,v90,v75,v25,v10,doptexp,ir,otype,outflag,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLDigitalStripPricer
		(
		double dtoday,
		double dstart,
		double dend,
		double fwd,
		double strike,
		double atm,
		double v90,
		double v75,
		double v25,
		double v10,
		double doptexp,
		double ir,
		std::string otype,
		std::string outflag,
		MyArray hols,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLDigitalStripPricer(dtoday,dstart,dend,fwd,strike,atm,v90,v75,v25,v10,doptexp,ir,otype,outflag,hols,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLSprdOptPricer
		(
		double dtoday,
		double dexp,
		double fwd,
		double strike,
		double atm,
		double ir,
		std::string otype,
		std::string outflag
		)
		{
		MANAGED_EXECL_BEGIN
			return CLSprdOptPricer(dtoday,dexp,fwd,strike,atm,ir,otype,outflag );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLBlackImpliedVol
		(
		double dtoday,
		double dexp,
		double fwd,
		double strike,
		double ir,
		std::string otype,
		double optPrice
		)
		{
		MANAGED_EXECL_BEGIN
			return CLBlackImpliedVol(dtoday,dexp,fwd,strike,ir,otype,optPrice );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLBachelierImpliedVol
		(
		double dtoday,
		double dexp,
		double fwd,
		double strike,
		double ir,
		std::string otype,
		double prem
		)
		{
		MANAGED_EXECL_BEGIN
			return CLBachelierImpliedVol(dtoday,dexp,fwd,strike,ir,otype,prem );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLBlackDelta
		(
		double dtoday,
		double dexp,
		double fwd,
		double strike,
		double vol,
		double ir,
		std::string otype
		)
		{
		MANAGED_EXECL_BEGIN
			return CLBlackDelta(dtoday,dexp,fwd,strike,vol,ir,otype );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLBarrierOptFlatVolPricer
		(
		double dtoday,
		double dexp,
		double fwd,
		double strike,
		double barrier,
		std::string btype,
		double atm,
		double doptexp,
		double ir,
		std::string otype,
		std::string mtype,
		std::string outflag,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLBarrierOptFlatVolPricer(dtoday,dexp,fwd,strike,barrier,btype,atm,doptexp,ir,otype,mtype,outflag,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLBarrierOptSmilePricer
		(
		double dtoday,
		double dexp,
		double fwd,
		double strike,
		double barrier,
		std::string btype,
		double atm,
		double v90,
		double v75,
		double v25,
		double v10,
		double doptexp,
		double ir,
		std::string otype,
		std::string mtype,
		std::string outflag,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLBarrierOptSmilePricer(dtoday,dexp,fwd,strike,barrier,btype,atm,v90,v75,v25,v10,doptexp,ir,otype,mtype,outflag,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLBarrierStripPricer
		(
		double dtoday,
		double dstart,
		double dend,
		double fwd,
		double strike,
		double barrier,
		std::string btype,
		double atm,
		double doptexp,
		double ir,
		std::string otype,
		std::string mtype,
		std::string outflag,
		MyArray hols,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLBarrierStripPricer(dtoday,dstart,dend,fwd,strike,barrier,btype,atm,doptexp,ir,otype,mtype,outflag,hols,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

int mxlw_CLCalibHistBreakevenVol
		(
		std::string hostname,
		std::string dbname,
		std::string tablename,
		int sprdnum,
		int expbackdays,
		int freq,
		MyArray contDates,
		std::string out_table
		)
		{
		MANAGED_EXECL_BEGIN
			return CLCalibHistBreakevenVol(hostname,dbname,tablename,sprdnum,expbackdays,freq,contDates,out_table );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLFXEuroOptPricer
		(
		double dtoday,
		double dexp,
		double fwd,
		double strike,
		double atm,
		double doptexp,
		double ir,
		std::string otype,
		MyArray fxFwdTenors,
		MyArray fxFwds,
		MyArray fxVolTenors,
		MyArray fxVols,
		double corr,
		std::string outflag,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLFXEuroOptPricer(dtoday,dexp,fwd,strike,atm,doptexp,ir,otype,fxFwdTenors,fxFwds,fxVolTenors,fxVols,corr,outflag,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

MyArray mxlw_CLFXEuroOptRisks
		(
		double dtoday,
		double dexp,
		double fwd,
		double strike,
		double atm,
		double doptexp,
		double ir,
		std::string otype,
		MyArray fxFwdTenors,
		MyArray fxFwds,
		MyArray fxVolTenors,
		MyArray fxVols,
		double corr,
		std::string outflag,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLFXEuroOptRisks(dtoday,dexp,fwd,strike,atm,doptexp,ir,otype,fxFwdTenors,fxFwds,fxVolTenors,fxVols,corr,outflag,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLFXEuroStripPricer
		(
		double dtoday,
		double dstart,
		double dend,
		double fwd,
		double strike,
		double atm,
		double doptexp,
		double ir,
		std::string otype,
		MyArray fxFwdTenors,
		MyArray fxFwds,
		MyArray fxVolTenors,
		MyArray fxVols,
		double corr,
		std::string outflag,
		MyArray hols,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLFXEuroStripPricer(dtoday,dstart,dend,fwd,strike,atm,doptexp,ir,otype,fxFwdTenors,fxFwds,fxVolTenors,fxVols,corr,outflag,hols,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

MyArray mxlw_CLFXEuroStripRisks
		(
		double dtoday,
		double dstart,
		double dend,
		double fwd,
		double strike,
		double atm,
		double doptexp,
		double ir,
		std::string otype,
		MyArray fxFwdTenors,
		MyArray fxFwds,
		MyArray fxVolTenors,
		MyArray fxVols,
		double corr,
		std::string outflag,
		MyArray hols,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLFXEuroStripRisks(dtoday,dstart,dend,fwd,strike,atm,doptexp,ir,otype,fxFwdTenors,fxFwds,fxVolTenors,fxVols,corr,outflag,hols,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLFXBinOptPricer
		(
		double dtoday,
		double dexp,
		double fwd,
		double strike,
		double atm,
		double doptexp,
		double ir,
		std::string otype,
		MyArray fxFwdTenors,
		MyArray fxFwds,
		MyArray fxVolTenors,
		MyArray fxVols,
		double corr,
		std::string outflag,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLFXBinOptPricer(dtoday,dexp,fwd,strike,atm,doptexp,ir,otype,fxFwdTenors,fxFwds,fxVolTenors,fxVols,corr,outflag,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

MyArray mxlw_CLFXBinOptRisks
		(
		double dtoday,
		double dexp,
		double fwd,
		double strike,
		double atm,
		double doptexp,
		double ir,
		std::string otype,
		MyArray fxFwdTenors,
		MyArray fxFwds,
		MyArray fxVolTenors,
		MyArray fxVols,
		double corr,
		std::string outflag,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLFXBinOptRisks(dtoday,dexp,fwd,strike,atm,doptexp,ir,otype,fxFwdTenors,fxFwds,fxVolTenors,fxVols,corr,outflag,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

double mxlw_CLFXBinStripPricer
		(
		double dtoday,
		double dstart,
		double dend,
		double fwd,
		double strike,
		double atm,
		double doptexp,
		double ir,
		std::string otype,
		MyArray fxFwdTenors,
		MyArray fxFwds,
		MyArray fxVolTenors,
		MyArray fxVols,
		double corr,
		std::string outflag,
		MyArray hols,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLFXBinStripPricer(dtoday,dstart,dend,fwd,strike,atm,doptexp,ir,otype,fxFwdTenors,fxFwds,fxVolTenors,fxVols,corr,outflag,hols,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

MyArray mxlw_CLFXBinStripRisks
		(
		double dtoday,
		double dstart,
		double dend,
		double fwd,
		double strike,
		double atm,
		double doptexp,
		double ir,
		std::string otype,
		MyArray fxFwdTenors,
		MyArray fxFwds,
		MyArray fxVolTenors,
		MyArray fxVols,
		double corr,
		std::string outflag,
		MyArray hols,
		double alpha,
		double beta
		)
		{
		MANAGED_EXECL_BEGIN
			return CLFXBinStripRisks(dtoday,dstart,dend,fwd,strike,atm,doptexp,ir,otype,fxFwdTenors,fxFwds,fxVolTenors,fxVols,corr,outflag,hols,alpha,beta );
		MANAGED_EXECL_END
		}

////////////////////////////////////

